services:

  scheduler-database:
    image: postgres:17.5
    container_name: scheduler-database
    env_file:
      - path: ./prod.env
        required: false
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${SCHEDULER_DATABASE_NAME}
      - POSTGRES_USER=${SCHEDULER_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${SCHEDULER_DATABASE_PASSWORD}
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10
    networks:
      - backend

  scheduler-service:
    image: ghcr.io/elenavo-pm/scheduler-service-prod:latest
    container_name: scheduler-service
    env_file:
      - path: ./prod.env
        required: false
    ports:
      - "${SCHEDULER_EXTERNAL_PORT}:8080"
    depends_on:
      scheduler-database:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://scheduler-database:5432/${SCHEDULER_DATABASE_NAME}
      - SPRING_DATASOURCE_USERNAME=${SCHEDULER_DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SCHEDULER_DATABASE_PASSWORD}
      - SERVER_PORT=8080
      - JWT_ACCESS_SECRET=${SCHEDULER_JWT_ACCESS_SECRET}
      - JWT_ACCESS_TTL=${SCHEDULER_JWT_ACCESS_TOKEN_TTL}
      - JWT_REFRESH_SECRET=${SCHEDULER_JWT_REFRESH_SECRET}
      - JWT_REFRESH_TTL=${SCHEDULER_JWT_REFRESH_TOKEN_TTL}
    healthcheck:
      test: "wget -T5 -qO- http://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - backend

networks:
  backend:
